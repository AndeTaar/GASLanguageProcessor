num canvasWidth = 500;
num canvasHeight = 250;

col white = Color{red=255, green=255, blue=255, alpha=1};
col red = Color{red=220, green=57, blue=29, alpha=1};
col blue = Color{red=0, green=0, blue=255, alpha=1};

num Cos(num angle) {
    num result = 1;
    num term = 1;
    num factorial = 1;
    for (num i = 1; i <= 10; i+=1) {
        term *= -angle * angle / ((2 * i) * (2 * i - 1));
        result += term;
    }
    return result;
}

num Sin(num angle) {
    num result = angle;
    num term = angle;
    num factorial = 1;
    for (num i = 1; i <= 10; i+=1) {
        term *= -angle * angle / ((2 * i + 1) * (2 * i));
        result += term;
    }
    return result;
}

list<polygon> polygons = List<polygon>{};

void createCircleDiagram(num radius, struct center, num percentage, struct color1, struct color2){
    list<point> points = List<point>{};
    num entireCircle = 2 * 3.14;
    entireCircle = entireCircle * percentage / 100;

    for (num theta = 0; theta <= entireCircle; theta = theta + 3.14 / 180)
    {
        num x2 = center.x + radius * Sin(theta)*-1;
        num y = center.y + radius * Cos(theta)*-1;
        struct point1 = Point{x=x2, y=y};
        AddToList(point1, points);
    }

    AddToList(center, points);
    circle c = Circle{center=center, radius=50, stroke=0, color=color1, strokeColor=red};
    AddToList(c, polygons);
    polygon poly = Polygon{points=points, stroke=0, color=color2, strokeColor=white};
    AddToList(poly, polygons);
    circle c1 = Circle{center=center, radius=30, stroke=0, color=white, strokeColor=white};
    AddToList(c1, polygons);
}
num radius = 50;
struct center = Point{x=centerPointX, y=centerPointY};
createCircleDiagram(radius, center, 81, red, blue);

canvas (canvasWidth, canvasHeight, white);
